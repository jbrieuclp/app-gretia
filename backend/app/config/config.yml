imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    jms_serializer.camel_case_naming_strategy.class: JMS\Serializer\Naming\IdenticalPropertyNamingStrategy
    jms_serializer.doctrine_proxy_subscriber.class: API\CoreBundle\EventListener\DoctrineProxySubscriber

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: false
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    serializer:
        enabled: false
    templating:
        engines: ['twig']

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: gretiadb
        connections:
            gretiadb:
                driver: "%gretia_database_driver%"
                host: "%gretia_database_host%"
                port: "%gretia_database_port%"
                dbname: "%gretia_database_name%"
                user: "%gretia_database_user%"
                password: "%gretia_database_password%"
                server_version: "%gretia_database_server_version%"
                charset: UTF8
            bibliodb:
                driver: "%biblio_database_driver%"
                host: "%biblio_database_host%"
                port: "%biblio_database_port%"
                dbname: "%biblio_database_name%"
                user: "%biblio_database_user%"
                password: "%biblio_database_password%"
                server_version: "%biblio_database_server_version%"
                charset: UTF8
            mc_taxref_db:
                driver: "%mc_taxref_database_driver%"
                host: "%mc_taxref_database_host%"
                port: "%mc_taxref_database_port%"
                dbname: "%mc_taxref_database_name%"
                user: "%mc_taxref_database_user%"
                password: "%mc_taxref_database_password%"
                server_version: "%mc_taxref_database_server_version%"
                charset: UTF8
            serena_db:
                driver: "%serena_database_driver%"
                host: "%serena_database_host%"
                port: "%serena_database_port%"
                dbname: "%serena_database_name%"
                user: "%serena_database_user%"
                password: "%serena_database_password%"
                server_version: "%serena_database_server_version%"
                charset: UTF8
                mapping_types:
                    _text: text_array
                    _int4: integer_array
            geonature_db:
                driver: "%geonature_database_driver%"
                host: "%geonature_database_host%"
                port: "%geonature_database_port%"
                dbname: "%geonature_database_name%"
                user: "%geonature_database_user%"
                password: "%geonature_database_password%"
                server_version: "%geonature_database_server_version%"
                charset: UTF8
        
        types:
            geometry:       CrEOF\Spatial\DBAL\Types\GeometryType
#            point:          CrEOF\Spatial\DBAL\Types\Geometry\PointType
#            multi_geom_2154: Core\ToolsBundle\Doctrine\DBAL\Types\MultiGeom\SRID2154
#            simple_geom_2154: Core\ToolsBundle\Doctrine\DBAL\Types\SimpleGeom\SRID2154
#            simple_geom_4326: Core\ToolsBundle\Doctrine\DBAL\Types\SimpleGeom\SRID4326
#            linestring:     CrEOF\Spatial\DBAL\Types\Geometry\LineStringType
            integer_array:  Doctrine\DBAL\PostgresTypes\IntArrayType
            text_array:     Doctrine\DBAL\PostgresTypes\TextArrayType
#            float_array:     Core\ToolsBundle\Doctrine\DBAL\ArrayTypes\FloatArrayType
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        default_entity_manager: gretiadb
        entity_managers:
            gretiadb:
                connection: gretiadb
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: false
                mappings:
                    APICoreBundle: ~
                    APIBiblioBundle: ~
                    APIMagicTaxrefBundle: ~
                    APIMetadataBundle: ~
                    APIProjetBundle: ~
                    APISerenaBundle: ~
            bibliodb:
                connection: bibliodb
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: false
                mappings:
                    APICoreBundle: ~
                    APIBiblioBundle: ~
                    APIMagicTaxrefBundle: ~
                    APIMetadataBundle: ~
                    APIProjetBundle: ~
                    APISerenaBundle: ~
            mc_taxref_db:
                connection: mc_taxref_db
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: false
                mappings:
                    APICoreBundle: ~
                    APIBiblioBundle: ~
                    APIMagicTaxrefBundle: ~
                    APIMetadataBundle: ~
                    APIProjetBundle: ~
                    APISerenaBundle: ~
            serena_db:
                connection: serena_db
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: false
                mappings:
                    APICoreBundle: ~
                    APIBiblioBundle: ~
                    APIMagicTaxrefBundle: ~
                    APIMetadataBundle: ~
                    APIProjetBundle: ~
                    APISerenaBundle: ~
                dql:
                    numeric_functions:
                        st_union:        CrEOF\Spatial\ORM\Query\AST\Functions\PostgreSql\STUnion
                        st_transform:    CrEOF\Spatial\ORM\Query\AST\Functions\PostgreSql\STTransform
            geonature_db:
                connection: geonature_db
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: false
                mappings:
                    APICoreBundle: ~
                    APIBiblioBundle: ~
                    APIMagicTaxrefBundle: ~
                    APIMetadataBundle: ~
                    APIProjetBundle: ~
                    APISerenaBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }


sensio_framework_extra:
    request: { converters: true }
    view: { annotations: true }

fos_rest:
    routing_loader:
        default_format: json
    view:
        view_response_listener: true
#        formats: { json: true, xml: false, rss: false }
    serializer:
        serialize_null:  true
    exception:
        enabled: true
    body_converter:
        enabled: true
    param_fetcher_listener: force

jms_serializer:
    handlers:
        datetime:
            default_format: "Y-m-d\\TH:i:sP"
            default_timezone: "UTC"

nelmio_cors:
    paths:
        '^/':
            allow_origin: ['*']
            allow_headers: ['origin', 'content-type', 'authorization', 'enctype']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
            max_age: 3600

lexik_jwt_authentication:
    private_key_path: '%jwt_private_key_path%'
    public_key_path:  '%jwt_public_key_path%'
    pass_phrase:      '%jwt_key_pass_phrase%'
    token_ttl:        '%jwt_token_ttl%'
    token_extractors:
        authorization_header: 
            enabled: true
            prefix:  Bearer
            name:    Authorization
        cookie: ~
        query_parameter: ~

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: API\CoreBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"
#    registration:
#        form:
#            type: API\CoreBundle\Form\RegistrationType

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ APICoreBundle ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
